{"version":3,"sources":["reportWebVitals.js","components/Navbar.component.jsx","redux/contants/actionTypes.js","components/Counter.component.jsx","redux/actions/counterActions.js","components/Counters.component.jsx","components/ResetButton.components.jsx","components/AddNewButton.component.jsx","components/DeleteAllButton.component.jsx","components/App.component.jsx","redux/reducers/counterReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","counters","useSelector","state","countersState","className","href","countNonZero","forEach","counter","value","getNonZeroItems","ActionTypes","Counter","id","dispatch","useDispatch","onClick","type","payload","Counters","map","ResetButton","AddNewButton","Math","floor","random","DeleteAllButton","App","initialState","combineReducers","allCounterReset","incrementCounter","decrementCounter","resetCounter","deleteCounter","filter","store","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.987263f1.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction Navbar() {\r\n    const counters = useSelector((state) => state.countersState.counters);\r\n\r\n    const getNonZeroItems = () => {\r\n        let countNonZero = 0;\r\n        counters.forEach((counter) => {\r\n            if (counter.value > 0) countNonZero++;\r\n        });\r\n        return countNonZero;\r\n    };\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <div className=\"container-fluid\">\r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                    Counters&nbsp;\r\n                    <span className=\"badge bg-dark\">{getNonZeroItems()}</span>\r\n                </a>\r\n            </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar;\r\n","export const ActionTypes = {\r\n    //  Counters Actions\r\n\r\n    ADD_NEW_COUNTER: \"ADD_NEW_COUNTER\",\r\n    DELETE_ALL_COUNTERS: \"DELETE_ALL_COUNTERS\",\r\n    RESET_ALL_COUNTERS: \"RESET_ALL_COUNTERS\",\r\n\r\n    //  Counter Action\r\n\r\n    INCREMENT_COUNTER: \"INCREMENT_COUNTER\",\r\n    DECREMENT_COUNTER: \"DECREMENT_COUNTER\",\r\n    RESET_COUNTER: \"RESET_COUNTER\",\r\n    DELETE_COUNTER: \"DELETE_COUNTER\",\r\n};\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n    decrementCounter,\r\n    incrementCounter,\r\n    resetCounter,\r\n    deleteCounter,\r\n} from \"../redux/actions/counterActions\";\r\n\r\nfunction Counter({ value, id }) {\r\n    const formatCount = () => {\r\n        if (value == 0) return \"Zero\";\r\n        return value;\r\n    };\r\n\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <>\r\n            <ul>\r\n                <li className=\"list-unstyled\">\r\n                    <div>\r\n                        <span className=\"badge bg-pill bg-dark\">\r\n                            {formatCount()}\r\n                        </span>\r\n                        <button\r\n                            onClick={() => dispatch(incrementCounter(id))}\r\n                            type=\"button\"\r\n                            className=\"btn btn-secondary m-2\"\r\n                        >\r\n                            +\r\n                        </button>\r\n                        <button\r\n                            onClick={() => dispatch(decrementCounter(id))}\r\n                            type=\"button\"\r\n                            className=\"btn btn-secondary m-2\"\r\n                        >\r\n                            -\r\n                        </button>\r\n                        <button\r\n                            onClick={() => dispatch(resetCounter(id))}\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-dark m-2\"\r\n                        >\r\n                            Reset\r\n                        </button>\r\n                        <button\r\n                            onClick={() => dispatch(deleteCounter(id))}\r\n                            type=\"button\"\r\n                            className=\"btn btn-outline-danger m-2\"\r\n                        >\r\n                            Delete\r\n                        </button>\r\n                    </div>\r\n                </li>\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Counter;\r\n","import { ActionTypes } from \"../contants/actionTypes\";\r\n\r\nexport const addNewCounter = () => {\r\n    return {\r\n        type: ActionTypes.ADD_NEW_COUNTER,\r\n        payload: {\r\n            id: Math.floor(Math.random() * 1000),\r\n            value: 0,\r\n        },\r\n    };\r\n};\r\n\r\nexport const resetAllCounters = () => {\r\n    return {\r\n        type: ActionTypes.RESET_ALL_COUNTERS,\r\n    };\r\n};\r\n\r\nexport const deleteAllCounters = () => {\r\n    return {\r\n        type: ActionTypes.DELETE_ALL_COUNTERS,\r\n    };\r\n};\r\n\r\nexport const incrementCounter = (counterId) => {\r\n    return {\r\n        type: ActionTypes.INCREMENT_COUNTER,\r\n        payload: {\r\n            id: counterId,\r\n        },\r\n    };\r\n};\r\n\r\nexport const decrementCounter = (counterId) => {\r\n    return {\r\n        type: ActionTypes.DECREMENT_COUNTER,\r\n        payload: {\r\n            id: counterId,\r\n        },\r\n    };\r\n};\r\n\r\nexport const resetCounter = (counterId) => {\r\n    return {\r\n        type: ActionTypes.RESET_COUNTER,\r\n        payload: {\r\n            id: counterId,\r\n        },\r\n    };\r\n};\r\n\r\nexport const deleteCounter = (counterId) => {\r\n    return {\r\n        type: ActionTypes.DELETE_COUNTER,\r\n        payload: {\r\n            id: counterId,\r\n        },\r\n    };\r\n};\r\n","import React from \"react\";\r\nimport Counter from \"./Counter.component\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport default function Counters() {\r\n    const counters = useSelector((state) => state.countersState.counters);\r\n    return counters.map((counters) => {\r\n        return (\r\n            <Counter\r\n                key={counters.id}\r\n                value={counters.value}\r\n                id={counters.id}\r\n            />\r\n        );\r\n    });\r\n}\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { resetAllCounters } from \"../redux/actions/counterActions\";\r\n\r\nfunction ResetButton() {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <button\r\n            onClick={() => dispatch(resetAllCounters())}\r\n            type=\"button\"\r\n            className=\"btn btn-warning m-2\"\r\n        >\r\n            Reset All\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default ResetButton;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addNewCounter } from \"../redux/actions/counterActions\";\r\n\r\nfunction AddNewButton() {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <button\r\n            onClick={() => dispatch(addNewCounter())}\r\n            type=\"button\"\r\n            className=\"btn btn-success m-2\"\r\n        >\r\n            Add New\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default AddNewButton;\r\n","import React from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { deleteAllCounters } from \"../redux/actions/counterActions\";\r\n\r\nfunction DeleteAllButton() {\r\n    const dispatch = useDispatch();\r\n    return (\r\n        <button\r\n            onClick={() => dispatch(deleteAllCounters())}\r\n            type=\"button\"\r\n            className=\"btn btn-danger m-2\"\r\n        >\r\n            Delete All\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default DeleteAllButton;\r\n","import React from \"react\";\r\nimport Navbar from \"./Navbar.component\";\r\nimport Counters from \"./Counters.component\";\r\nimport ResetButton from \"./ResetButton.components\";\r\nimport AddNewButton from \"./AddNewButton.component\";\r\nimport DeleteAllButton from \"./DeleteAllButton.component\";\r\n\r\nfunction App() {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n            <AddNewButton />\r\n            <ResetButton />\r\n            <DeleteAllButton />\r\n            <Counters />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ActionTypes } from \"../contants/actionTypes\";\r\n\r\nconst initialState = {\r\n    counters: [\r\n        { id: 0, value: 0 },\r\n        { id: 1, value: 0 },\r\n        { id: 2, value: 0 },\r\n        { id: 3, value: 0 },\r\n        { id: 4, value: 0 },\r\n    ],\r\n};\r\n\r\nexport default function counterReducer(\r\n    state = initialState,\r\n    { type, payload }\r\n) {\r\n    switch (type) {\r\n        case ActionTypes.ADD_NEW_COUNTER:\r\n            state = { ...state, counters: [...state.counters, payload] };\r\n            return state;\r\n\r\n        case ActionTypes.RESET_ALL_COUNTERS:\r\n            const allCounterReset = state.counters.map((counter) => {\r\n                const obj = { id: counter.id, value: 0 };\r\n                return obj;\r\n            });\r\n            state = { ...state, counters: allCounterReset };\r\n            return state;\r\n\r\n        case ActionTypes.DELETE_ALL_COUNTERS:\r\n            state = { ...state, counters: [] };\r\n            return state;\r\n\r\n        case ActionTypes.INCREMENT_COUNTER:\r\n            const incrementCounter = state.counters.map((counter) => {\r\n                if (counter.id === payload.id)\r\n                    return { id: counter.id, value: counter.value + 1 };\r\n                else return counter;\r\n            });\r\n            state = { ...state, counters: incrementCounter };\r\n            return state;\r\n\r\n        case ActionTypes.DECREMENT_COUNTER:\r\n            const decrementCounter = state.counters.map((counter) => {\r\n                if (counter.id === payload.id && counter.value > 0)\r\n                    return { id: counter.id, value: counter.value - 1 };\r\n                else return counter;\r\n            });\r\n            state = { ...state, counters: decrementCounter };\r\n            return state;\r\n\r\n        case ActionTypes.RESET_COUNTER:\r\n            const resetCounter = state.counters.map((counter) => {\r\n                if (counter.id === payload.id)\r\n                    return { id: counter.id, value: 0 };\r\n                else return counter;\r\n            });\r\n            state = { ...state, counters: resetCounter };\r\n            return state;\r\n\r\n        case ActionTypes.DELETE_COUNTER:\r\n            const deleteCounter = state.counters.filter((counter) => {\r\n                if (counter.id !== payload.id) return counter;\r\n            });\r\n            state = { ...state, counters: deleteCounter };\r\n            return state;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport counterReducer from \"./counterReducer\";\r\n\r\nexport default combineReducers({\r\n    countersState: counterReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./components/App.component\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"../src/redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["reportWebVitals.js","components/navbar.component.jsx","components/counter.component.jsx","components/counters.component.jsx","components/resetButton.components.jsx","components/addNewButton.component.jsx","components/deleteAllButton.component.jsx","components/app.component.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","state","className","href","this","props","nonZeroItems","Component","Counter","formatCount","value","onClick","onIncrement","id","type","onDecrement","onSingleCounterReset","onDelete","Counters","counters","map","ResetButton","onAllReset","AddNewButton","onAddNew","DeleteAllButton","onDeleteAll","App","getNonZeroItems","countNonZero","forEach","counter","handleAddNew","newCountersState","Math","floor","random","setState","handleAllReset","allCounterReset","index","handleDeleteAll","handleIncrement","incrementCounters","handleDecrement","decrementCounters","handleSingleCounterReset","resetSingleCounter","handleDelete","filteredCounters","filter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0e6367ce.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from \"react\";\r\n\r\nclass Navbar extends Component {\r\n    state = {};\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <div className=\"container-fluid\">\r\n                    <a className=\"navbar-brand\" href=\"#\">\r\n                        Counters{\" \"}\r\n                        <span className=\"badge bg-dark\">\r\n                            {this.props.nonZeroItems}\r\n                        </span>\r\n                    </a>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n    formatCount = () => {\r\n        if (this.props.value == 0) return \"Zero\";\r\n        return this.props.value;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <ul>\r\n                    <li className=\"list-unstyled\">\r\n                        <div>\r\n                            <span className=\"badge bg-pill bg-dark\">\r\n                                {this.formatCount()}\r\n                            </span>\r\n                            <button\r\n                                onClick={() =>\r\n                                    this.props.onIncrement(this.props.id)\r\n                                }\r\n                                type=\"button\"\r\n                                className=\"btn btn-secondary m-2\"\r\n                            >\r\n                                +\r\n                            </button>\r\n                            <button\r\n                                onClick={() =>\r\n                                    this.props.onDecrement(this.props.id)\r\n                                }\r\n                                type=\"button\"\r\n                                className=\"btn btn-secondary m-2\"\r\n                            >\r\n                                -\r\n                            </button>\r\n                            <button\r\n                                onClick={() =>\r\n                                    this.props.onSingleCounterReset(\r\n                                        this.props.id\r\n                                    )\r\n                                }\r\n                                type=\"button\"\r\n                                className=\"btn btn-outline-dark m-2\"\r\n                            >\r\n                                Reset\r\n                            </button>\r\n                            <button\r\n                                onClick={() =>\r\n                                    this.props.onDelete(this.props.id)\r\n                                }\r\n                                type=\"button\"\r\n                                className=\"btn btn-outline-danger m-2\"\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    </li>\r\n                </ul>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from 'react';\r\nimport Counter from './counter.component';\r\n\r\nclass Counters extends Component {\r\n    render() {\r\n        return this.props.counters.map((counters) => {\r\n            return (\r\n                <Counter\r\n                    key={counters.id}\r\n                    value={counters.value}\r\n                    id={counters.id}\r\n                    onIncrement={this.props.onIncrement}\r\n                    onDecrement={this.props.onDecrement}\r\n                    onDelete={this.props.onDelete}\r\n                    onSingleCounterReset={this.props.onSingleCounterReset}\r\n                />\r\n            );\r\n        });\r\n    }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ResetButton extends Component {\r\n    state = {};\r\n    render() {\r\n        return (\r\n            <button\r\n                onClick={this.props.onAllReset}\r\n                type=\"button\"\r\n                className=\"btn btn-warning m-2\"\r\n            >\r\n                Reset All\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ResetButton;\r\n","import React, { Component } from \"react\";\r\n\r\nclass AddNewButton extends Component {\r\n    render() {\r\n        return (\r\n            <button\r\n                onClick={this.props.onAddNew}\r\n                type=\"button\"\r\n                className=\"btn btn-success m-2\"\r\n            >\r\n                Add New\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddNewButton;\r\n","import React, { Component } from \"react\";\r\n\r\nclass DeleteAllButton extends Component {\r\n    render() {\r\n        return (\r\n            <button\r\n                onClick={this.props.onDeleteAll}\r\n                type=\"button\"\r\n                className=\"btn btn-danger m-2\"\r\n            >\r\n                Delete All\r\n            </button>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DeleteAllButton;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./navbar.component\";\r\nimport Counters from \"./counters.component\";\r\nimport ResetButton from \"./resetButton.components\";\r\nimport AddNewButton from \"./addNewButton.component\";\r\nimport DeleteAllButton from \"./deleteAllButton.component\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        counters: [\r\n            { id: 0, value: 0 },\r\n            { id: 1, value: 0 },\r\n            { id: 2, value: 0 },\r\n            { id: 3, value: 0 },\r\n            { id: 4, value: 0 },\r\n        ],\r\n    };\r\n\r\n    getNonZeroItems = () => {\r\n        let countNonZero = 0;\r\n        this.state.counters.forEach((counter) => {\r\n            if (counter.value > 0) countNonZero++;\r\n        });\r\n        return countNonZero;\r\n    };\r\n\r\n    handleAddNew = () => {\r\n        const newCountersState = [\r\n            ...this.state.counters,\r\n            {\r\n                id: Math.floor(Math.random() * 1000),\r\n                value: 0,\r\n            },\r\n        ];\r\n        this.setState({ counters: newCountersState });\r\n    };\r\n\r\n    handleAllReset = () => {\r\n        const allCounterReset = this.state.counters.map((counter, index) => {\r\n            const obj = { id: index, value: 0 };\r\n            return obj;\r\n        });\r\n        this.setState({ counters: allCounterReset });\r\n    };\r\n\r\n    handleDeleteAll = () => {\r\n        this.setState({ counters: [] });\r\n    };\r\n\r\n    handleIncrement = (id) => {\r\n        const incrementCounters = this.state.counters.map((counter, index) => {\r\n            if (counter.id === id)\r\n                return { id: index, value: counter.value + 1 };\r\n            else return counter;\r\n        });\r\n        this.setState({ counters: incrementCounters });\r\n    };\r\n\r\n    handleDecrement = (id) => {\r\n        const decrementCounters = this.state.counters.map((counter, index) => {\r\n            if (counter.id === id && counter.value > 0)\r\n                return { id: index, value: counter.value - 1 };\r\n            else return counter;\r\n        });\r\n        this.setState({ counters: decrementCounters });\r\n    };\r\n\r\n    handleSingleCounterReset = (id) => {\r\n        const resetSingleCounter = this.state.counters.map((counter) => {\r\n            if (counter.id === id) {\r\n                return { id: id, value: 0 };\r\n            } else return counter;\r\n        });\r\n        this.setState({ counters: resetSingleCounter });\r\n    };\r\n\r\n    handleDelete = (id) => {\r\n        const filteredCounters = this.state.counters.filter(\r\n            (counter) => counter.id !== id\r\n        );\r\n        this.setState({ counters: filteredCounters });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Navbar nonZeroItems={this.getNonZeroItems()} />\r\n                <AddNewButton onAddNew={this.handleAddNew} />\r\n                <ResetButton onAllReset={this.handleAllReset} />\r\n                <DeleteAllButton onDeleteAll={this.handleDeleteAll} />\r\n                <Counters\r\n                    counters={this.state.counters}\r\n                    onIncrement={this.handleIncrement}\r\n                    onDecrement={this.handleDecrement}\r\n                    onDelete={this.handleDelete}\r\n                    onSingleCounterReset={this.handleSingleCounterReset}\r\n                />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport App from \"./components/app.component\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nreportWebVitals();\n"],"sourceRoot":""}